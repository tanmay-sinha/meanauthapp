{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","AppModule","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","router","flashmsg","user","username","password","authenticateUser","subscribe","data","success","storeUserData","token","show","cssClass","timeout","navigate","console","log","msg","onLoginSubmit","NavbarComponent","logout","ProfileComponent","authservice","getProfile","profile","err","RegisterComponent","validateService","flashMessage","name","email","validateRegister","registerUser","onRegisterSubmit","AuthGuard","loggedIn","AuthService","http","headers","set","post","pipe","res","loadToken","authToken","append","get","localStorage","setItem","JSON","stringify","getItem","clear","providedIn","ValidateService","undefined","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <flash-messages></flash-messages>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { Route } from '@angular/compiler/src/core';\nimport { ValidateService } from \"./services/validate.service\";\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\nimport { AuthService } from \"./services/auth.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AuthGuard } from \"./guards/auth.guard\";\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent,canActivate:[AuthGuard] },\n  { path: 'profile', component: ProfileComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcom to your Dashboard.</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Tutorial App</h1>\n    <p class=\"lead\"> MEAN Application Tutorial for login</p>\n    <div>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>\n        <a class=\"btn btn-default\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-4\">\n        <h3>Express Backend</h3>\n        <p>Using Node.js/expess using mongoose </p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Angular CLI</h3>\n        <p>Angular CLI to generate components.</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>JWT-Tokens</h3>\n        <p>FUll featured authentication using JSON web tokens.</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashmsg: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.flashmsg.show('You are now Logined', { cssClass: 'alert-success', timeout: 5000 });\n        this.router.navigate(['dashboard']);\n        console.log('correct');\n      }\n      else {\n        this.flashmsg.show(data.msg, { cssClass: 'alert-danger', timeout: 5000 });\n        this.router.navigate(['login']);\n        console.log('incorrect');\n      }\n    });\n  }\n\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private flashmsg: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashmsg.show(\"You are logged-out\",{\n      cssClass:'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark \">\n    <a class=\"navbar-brand\" href=\"#\">MEAN AUTH APP</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n        aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto navbar-left\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item active\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right\">\n            <li *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile<span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li *ngIf=\"authService.loggedIn()\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\">Logout <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register<span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n\n  constructor(\n    public authservice: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authservice.getProfile().subscribe((profile:any) => {\n      this.user = profile.user;\n      console.log(profile.user);\n    },\n      err => {\n        console.log(err);\n\n        return false;\n      });\n  }\n\n}\n","<div *ngIf = \"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username: {{ user.username }}</li>\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../../services/validate.service\";\nimport { FlashMessagesModule, FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authservice: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessage.show(\"Please fill in the fileds\", { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n\n    this.authservice.registerUser(user).subscribe(data => {\n      if (data.success) {\n        this.flashMessage.show(\"You are registered. you can login now\", { cssClass: 'alert-success', timeout: 3000 });\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show(\"Something went wrong\", { cssClass: 'alert-danger', timeout: 3000 });\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" name=\"name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authservice: AuthService,\n        private router: Router\n    ) { }\n\n    canActivate(){\n        if(this.authservice.loggedIn()){\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from \"angular2-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:5000/users/register', user, { headers: headers }).pipe(map((res: any) => res));\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:5000/users/authenticate', user, { headers: headers }).pipe(map((res: any) => res));\n  }\n\n  getProfile() {\n    this.loadToken();\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    console.log(this.authToken);\n    headers.append('Authorization',this.authToken);\n    return this.http.get('http://localhost:5000/users/profile', { headers: headers }).pipe(map((res: any) => res));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    return true;\n  }\n  \n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}